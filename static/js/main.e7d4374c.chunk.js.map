{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","styles","FeedbackOptions","options","onLeaveFeedback","map","option","s","optionButton","type","name","onClick","Statistics","good","neutral","bad","total","positive","list","listItem","Notification","message","App","state","onButtonClick","e","target","setState","prevState","this","Math","round","countTotalFeedback","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,SAAW,+B,wCCA7DD,EAAOC,QAAU,CAAC,aAAe,wC,+LCuBlBC,EAnBC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,oBAAIC,UAAWC,IAAOH,MAAtB,SAA8BA,IAC7BC,M,gBCeQG,EApBS,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,gBAC/B,OACJ,8BACID,EAAQE,KAAI,SAACC,GACV,OACC,wBAAQN,UAAWO,IAAEC,aAAcC,KAAK,SAASC,KAAMJ,EAAQK,QAASP,EAAxE,SAA0FE,U,gBCgBnFM,EAtBI,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAC5C,OACI,8BACI,qBAAIjB,UAAWO,IAAEW,KAAjB,UACI,qBAAIlB,UAAWO,IAAEY,SAAjB,mBAAkCN,KAClC,qBAAIb,UAAWO,IAAEY,SAAjB,sBAAqCL,KACrC,qBAAId,UAAWO,IAAEY,SAAjB,kBAAiCJ,KACjC,qBAAIf,UAAWO,IAAEY,SAAjB,oBAAmCH,KACnC,qBAAIhB,UAAWO,IAAEY,SAAjB,gCAA+CF,EAA/C,aCGDG,EAVM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACnB,OACI,4BAAIA,KCENC,E,4MAOJC,MAAQ,CACNV,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTS,cAAgB,SAAAC,GACd,IAAOf,EAAQe,EAAEC,OAAVhB,KACT,EAAKiB,UAAS,SAAAC,GACZ,OAAO,eAAGlB,EAAOkB,EAAUlB,GAAQ,O,wDAIrC,WACE,MAA6BmB,KAAKN,MAA3BV,EAAP,EAAOA,KAAME,EAAb,EAAaA,IACf,OACEF,EAFA,EAAkBC,QAEDC,I,6CAKnB,WACE,MAA6Bc,KAAKN,MAA3BV,EAAP,EAAOA,KAAME,EAAb,EAAaA,IAAKD,EAAlB,EAAkBA,QACpB,OACEgB,KAAKC,MAAMlB,GAAQA,EAAOC,EAAUC,GAAO,O,oBAI3C,WACE,MAA6Bc,KAAKN,MAA3BV,EAAP,EAAOA,KAAME,EAAb,EAAaA,IAAKD,EAAlB,EAAkBA,QAClB,OACE,sBAAKd,UAAU,YAAf,UACA,cAAC,EAAD,CAASF,MAAM,yBAAf,SACE,cAAC,EAAD,CACAK,QAAW,CAAC,OAAQ,UAAW,OAC/BC,gBAAiByB,KAAKL,kBAG9B,cAAC,EAAD,CAAS1B,MAAM,aAAf,SAECe,GAAQE,GAAOD,EAEhB,cAAC,EAAD,CACAD,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAASa,KAAKG,qBACdf,SAAYY,KAAKI,oCAGf,cAAC,EAAD,CAAcZ,QAAQ,+B,GAzDNa,aAoEHZ,ICvEfa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e7d4374c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__1a1a7\",\"listItem\":\"Statistics_listItem__1FUI8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"optionButton\":\"FeedbackOptions_optionButton__31OQa\"};","import PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\n\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2 className={styles.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node\r\n}\r\n\r\nexport default Section;","import propTypes from \"prop-types\"\r\nimport s from \"./FeedbackOptions.module.css\"\r\n\r\n\r\nconst FeedbackOptions = ({options, onLeaveFeedback}) => {\r\n    return (\r\n<div>\r\n   {options.map((option)=>{\r\n       return(\r\n        <button className={s.optionButton} type=\"button\" name={option} onClick={onLeaveFeedback}>{option}</button>\r\n        )\r\n    }\r\n       )\r\n       } \r\n</div>\r\n    )\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: propTypes.arrayOf(propTypes.string.isRequired\r\n    ),\r\n    onLeaveFeedback: propTypes.func.isRequired\r\n }\r\n\r\nexport default FeedbackOptions;","import propTypes from \"prop-types\"\r\nimport s from \"./Statistics.module.css\"\r\n\r\nconst Statistics = ({good, neutral, bad, total, positive}) => {\r\n    return(\r\n        <div>\r\n            <ul className={s.list}>\r\n                <li className={s.listItem}>Good: {good}</li>\r\n                <li className={s.listItem}>Neutral: {neutral}</li>\r\n                <li className={s.listItem}>Bad: {bad}</li>\r\n                <li className={s.listItem}>Total: {total}</li>\r\n                <li className={s.listItem}>Positive feedback: {positive}%</li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: propTypes.number.isRequired, \r\n    neutral: propTypes.number.isRequired, \r\n    bad: propTypes.number.isRequired, \r\n    total: propTypes.number.isRequired, \r\n    positive: propTypes.number.isRequired\r\n}\r\n\r\nexport default Statistics","import propTypes from \"prop-types\"\r\n\r\n\r\n\r\nconst Notification = ({message}) => {\r\n    return(\r\n        <p>{message}</p>\r\n    )\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: propTypes.string.isRequired    \r\n}\r\n\r\nexport default Notification;","import {Component} from \"react\";\nimport './App.css';\nimport Section from './components/Section/Section'\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions'\nimport Statistics from \"./components/Statistics/Statistics\";\nimport Notification from \"./components/Notification/Notification\";\nimport propTypes from \"prop-types\"\n\nclass App extends Component {\nstatic propTypes = {\n  good: propTypes.number,\n  neutral: propTypes.number,\n  bad: propTypes.number\n}\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  }\n\nonButtonClick = e => {\n  const {name} = e.target;\nthis.setState(prevState => {\n  return ({[name]: prevState[name] + 1 })   \n})\n  }\n\ncountTotalFeedback(){\n  const {good, bad, neutral} = this.state\nreturn(\n  good + neutral + bad\n)\n\n}\n\ncountPositiveFeedbackPercentage(){\n  const {good, bad, neutral} = this.state\nreturn(\n  Math.round(good / (good + neutral + bad) * 100)\n)\n}\n\n  render(){\n    const {good, bad, neutral} = this.state\n    return (\n      <div className=\"container\">\n      <Section title=\"Please, leave feedback\">\n        <FeedbackOptions \n        options = {['good', 'neutral', 'bad']}\n        onLeaveFeedback={this.onButtonClick}/>\n      </Section>\n\n<Section title=\"Statistics\">\n\n{good || bad || neutral ? (\n\n<Statistics\ngood={good}\nneutral={neutral}\nbad={bad}\ntotal = {this.countTotalFeedback()}\npositive = {this.countPositiveFeedbackPercentage()}\n/>\n) : (\n  <Notification message=\"No feedback given\" />\n)\n}\n\n\n         </Section>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}